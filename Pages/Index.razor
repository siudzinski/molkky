@page "/"
@using Domain;
@using Infrastructure;

<PageTitle>Game</PageTitle>

<div class="container">
    <h1>Game</h1>

    <p role="status">Winner: <b>@game?.Winner?.Name</b></p>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-12 mb-3">
            <div class="card text-center">
                <div class="card-body">
                    <h5 class="card-title">Current player: @game?.CurrentPlayer?.Name</h5>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @for (int i = 0; i < 12; i++)
        {
            var score = i;
            <div class="col-md-4 col-sm-4 col-4 mb-3">
                <a href="javascript:void(0);" @onclick="() => AddScore(score)" style="text-decoration: none;">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5 class="card-title">@i</h5>
                        </div>
                    </div>
                </a>
            </div>
        }
        <div class="col-md-12 col-sm-12 col-12 mb-3">
            <a href="javascript:void(0);" @onclick="() => AddScore(12)" style="text-decoration: none;">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">12</h5>
                    </div>
                </div>
            </a>
        </div>
    </div>

    @if(game is not null)
    {
        <h2>Players:</h2>
        <div class="row">
            @foreach (var player in game.Players)
            {
                <div class="col-md-3 col-sm-6 col-6 mb-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5 class="card-title @(player.InDanger ? "text-danger" : "")">
                                @player.Name : @player.Score
                            </h5>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if(game.Losers.Any())
        {
            <h3>Losers:</h3>
            <div class="row">
                @foreach (var loser in game.Losers)
                {
                    <div class="col-md-3 col-sm-6 col-6 mb-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">@loser.Name</h5>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>



@code {
    private Game? game;

    [Inject]
    private GameSessionStorage? GameStorage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(GameStorage is null) return;

        game = await GameStorage.LoadGameState();
        if (game == null)
        {
            game = Game.CreateNew(
                new List<Player> 
                { 
                    Player.CreateNew("test001"),
                    Player.CreateNew("test002"),
                    Player.CreateNew("test003"),
                    Player.CreateNew("test004")               
                });
        }
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(GameStorage is null) return;
        
        await GameStorage.SaveGameState(game);
    }

    private void AddScore(int score)
    {
        if(game is not null)
        {
            game.SetThrowScoreForCurrentPlayer(score);
        }
    }
}
