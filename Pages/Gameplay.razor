@page "/gameplay"
@using Domain;
@using Infrastructure;

<PageTitle>Game</PageTitle>

<MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <MudText Typo="Typo.h4" Align="Align.Center" GutterBottom="true">Current player: @game?.CurrentPlayer?.Name</MudText>
        </MudItem>
        <Keyboard OnScoreAdded="AddScore" />
        @if(game is not null)
        {
            <MudItem xs="12" sm="12" md="12">
                <MudText Typo="Typo.h6" Align="Align.Center" GutterBottom="true">Players</MudText>
                @foreach (var player in game.Players)
                {
                    var text = $"{player.Name} Score:{player.Score}";
                    <MudList>
                        <MudListItem Text="@text" Icon="@Icons.Material.Filled.Person" />
                    </MudList>
                }
            </MudItem>
            <MudItem xs="12" sm="12" md="12">
                <MudText Typo="Typo.h6" Align="Align.Center" GutterBottom="true">Losers</MudText>
            </MudItem>
            @if(game.Losers.Any())
            {
                @foreach (var loser in game.Losers)
                {
                    <MudItem xs="4" sm="4" md="4">
                        <MudBadge Icon="@Icons.Material.Filled.Cancel" Overlap="true" Color="Color.Error" Class="mx-6 my-4">
                            <MudChip Label="true" Color="Color.Warning" Style="color:black;">@loser.Name</MudChip>
                        </MudBadge>
                    </MudItem>
                }
            }
        }
    </MudGrid>
</MudContainer>

@code {
    private Game? game;

    [Inject]
    private GameSessionStorage? GameStorage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(GameStorage is not null)
        {
            game = await GameStorage.LoadGameState();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(GameStorage is not null)
        {
            await GameStorage.SaveGameState(game);
        }
    }

    private void AddScore(int score)
    {
        if(game is not null)
        {
            game.SetThrowScoreForCurrentPlayer(score);
        }
    }
}
